{"ast":null,"code":"import { GetToken, HasToken } from \"./Token\";\nconst DefaultServerAPIParams = {\n  url: \"/\",\n  urlParams: undefined,\n  body: undefined,\n  onDataReceived: undefined,\n  handleStatus: undefined,\n  headers: undefined,\n  useToken: undefined\n};\nconst getStrFromParams = rawParams => {\n  return rawParams ? \"?\" + Object.entries(rawParams).map(item => {\n    return `${item[0]}=${item[1]}`;\n  }).join(\"&\") : \"\";\n};\nconst ServerAPI = params => {\n  let headers = params.headers || {\n    \"Content-Type\": \"application/json; charset=UTF-8\"\n  };\n  if (HasToken() && (params.useToken === undefined || params.useToken === true)) {\n    headers = params.headers || {\n      \"Content-Type\": \"application/json; charset=UTF-8\",\n      Authorization: \"\" + GetToken()\n    };\n  }\n  fetch(params.url + getStrFromParams(params.urlParams), {\n    method: params.method,\n    headers: headers,\n    body: params.body && JSON.stringify(params.body)\n  }).then(response => {\n    try {\n      const promise = response.json();\n      if (promise !== undefined) {\n        promise.then(data => {\n          if (response.ok) {\n            params.onDataReceived && params.onDataReceived(data);\n          } else {\n            params.handleStatus && params.handleStatus({\n              isOk: response.ok,\n              status: response.status,\n              data: data && data\n            });\n          }\n        }).catch(err => {\n          console.log(\"Error\", err);\n          params.handleServerError && params.handleServerError();\n        });\n      }\n    } catch (err) {\n      params.handleServerError && params.handleServerError();\n    }\n  }).catch(err => {\n    console.log(err);\n    params.handleServerError && params.handleServerError();\n  });\n};\n_c = ServerAPI;\nexport const ServerAPI_GET = function () {\n  let params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DefaultServerAPIParams;\n  ServerAPI({\n    ...params,\n    method: \"GET\"\n  });\n};\n_c2 = ServerAPI_GET;\nexport const ServerAPI_POST = function () {\n  let params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DefaultServerAPIParams;\n  ServerAPI({\n    ...params,\n    method: \"POST\"\n  });\n};\n_c3 = ServerAPI_POST;\nexport const ServerAPI_PATCH = function () {\n  let params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DefaultServerAPIParams;\n  ServerAPI({\n    ...params,\n    method: \"PATCH\"\n  });\n};\n_c4 = ServerAPI_PATCH;\nexport const ServerAPI_DELETE = function () {\n  let params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DefaultServerAPIParams;\n  ServerAPI({\n    ...params,\n    method: \"DELETE\"\n  });\n};\n_c5 = ServerAPI_DELETE;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"ServerAPI\");\n$RefreshReg$(_c2, \"ServerAPI_GET\");\n$RefreshReg$(_c3, \"ServerAPI_POST\");\n$RefreshReg$(_c4, \"ServerAPI_PATCH\");\n$RefreshReg$(_c5, \"ServerAPI_DELETE\");","map":{"version":3,"names":["GetToken","HasToken","DefaultServerAPIParams","url","urlParams","undefined","body","onDataReceived","handleStatus","headers","useToken","getStrFromParams","rawParams","Object","entries","map","item","join","ServerAPI","params","Authorization","fetch","method","JSON","stringify","then","response","promise","json","data","ok","isOk","status","catch","err","console","log","handleServerError","ServerAPI_GET","ServerAPI_POST","ServerAPI_PATCH","ServerAPI_DELETE"],"sources":["/home/daniel/Documents/CS/Projects/RaT/RaT2.0/client/web/src/libs/ServerAPI.ts"],"sourcesContent":["import { GetToken, HasToken } from \"./Token\";\n\ninterface HandleStatusData {\n    isOk: boolean;\n    status: number;\n    data: any | undefined;\n}\n\ninterface AnyServerAPIParams {\n    url: string;\n    urlParams?: Object | undefined;\n    body?: any | undefined;\n    onDataReceived?: ((data: any) => void) | undefined;\n    handleStatus?: ((data: HandleStatusData) => void) | undefined;\n    handleServerError?: (() => void) | undefined;\n    headers?: HeadersInit | undefined;\n    useToken?: boolean | undefined;\n}\n\nconst DefaultServerAPIParams: AnyServerAPIParams = {\n    url: \"/\",\n    urlParams: undefined,\n    body: undefined,\n    onDataReceived: undefined,\n    handleStatus: undefined,\n    headers: undefined,\n    useToken: undefined,\n};\n\ninterface ServerAPIParams extends AnyServerAPIParams {\n    method: string;\n}\n\nconst getStrFromParams = (rawParams: Object | undefined) => {\n    return rawParams\n        ? \"?\" +\n              Object.entries(rawParams)\n                  .map((item) => {\n                      return `${item[0]}=${item[1]}`;\n                  })\n                  .join(\"&\")\n        : \"\";\n};\n\nconst ServerAPI = (params: ServerAPIParams) => {\n    let headers = params.headers || {\n        \"Content-Type\": \"application/json; charset=UTF-8\",\n    };\n    if (HasToken() && (params.useToken === undefined || params.useToken === true)) {\n        headers = params.headers || {\n            \"Content-Type\": \"application/json; charset=UTF-8\",\n            Authorization: \"\" + GetToken(),\n        };\n    }\n    fetch(params.url + getStrFromParams(params.urlParams), {\n        method: params.method,\n        headers: headers,\n        body: params.body && JSON.stringify(params.body),\n    })\n        .then((response) => {\n            try {\n                const promise = response.json();\n                if (promise !== undefined) {\n                    promise\n                        .then((data) => {\n                            if (response.ok) {\n                                params.onDataReceived && params.onDataReceived(data);\n                            } else {\n                                params.handleStatus &&\n                                    params.handleStatus({\n                                        isOk: response.ok,\n                                        status: response.status,\n                                        data: data && data,\n                                    });\n                            }\n                        })\n                        .catch((err) => {\n                            console.log(\"Error\", err);\n                            params.handleServerError && params.handleServerError();\n                        });\n                }\n            } catch (err) {\n                params.handleServerError && params.handleServerError();\n            }\n        })\n        .catch((err) => {\n            console.log(err);\n            params.handleServerError && params.handleServerError();\n        });\n};\n\nexport const ServerAPI_GET = (params = DefaultServerAPIParams) => {\n    ServerAPI({ ...params, method: \"GET\" });\n};\n\nexport const ServerAPI_POST = (params = DefaultServerAPIParams) => {\n    ServerAPI({ ...params, method: \"POST\" });\n};\n\nexport const ServerAPI_PATCH = (params = DefaultServerAPIParams) => {\n    ServerAPI({ ...params, method: \"PATCH\" });\n};\n\nexport const ServerAPI_DELETE = (params = DefaultServerAPIParams) => {\n    ServerAPI({ ...params, method: \"DELETE\" });\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}