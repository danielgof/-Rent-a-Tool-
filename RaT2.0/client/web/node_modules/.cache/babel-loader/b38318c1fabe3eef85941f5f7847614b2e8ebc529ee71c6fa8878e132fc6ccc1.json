{"ast":null,"code":"var _jsxFileName = \"/home/daniel/Documents/CS/Projects/RaT/client/web/src/components/Login.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport ProtectedRouts from \"./ProtectedRoutes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const navigate = useNavigate();\n\n  // const [isLogged, setIsLogged] = useState(false);\n\n  const [login, setLogin] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  let handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const body = JSON.stringify({\n        username: login,\n        password: password\n      });\n      const headers = new Headers({\n        \"Content-Type\": \"application/json\",\n        \"Content-Length\": JSON.stringify(body).length\n      });\n      console.log(JSON.stringify({\n        name: login,\n        password: password\n      }));\n      let res = await fetch(\"http://localhost:8080/api/auth/login\", {\n        method: \"POST\",\n        mode: \"cors\",\n        // headers: headers,\n        body: body\n      }).then(response => response.json());\n      // let resJson = await res.json();\n      if (res.status === 200) {\n        setLogin(\"\");\n        setPassword(\"\");\n        setMessage(\"User login successfully\");\n        // var isAuth = true;\n        // ProtectedRouts({isAuth})\n        navigate(\"/home\");\n        console.log(res.json());\n        then;\n      } else {\n        setMessage(\"Wrong login or password\");\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Login\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: login,\n        placeholder: \"login\",\n        onChange: e => setLogin(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: password,\n        placeholder: \"password\",\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"login\",\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: message ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 45\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"EwWhVGBIJ1+HOf5+oFVBQVflm1g=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useState","useNavigate","ProtectedRouts","Login","navigate","login","setLogin","password","setPassword","message","setMessage","handleSubmit","e","preventDefault","body","JSON","stringify","username","headers","Headers","length","console","log","name","res","fetch","method","mode","then","response","json","status","err","target","value"],"sources":["/home/daniel/Documents/CS/Projects/RaT/client/web/src/components/Login.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport ProtectedRouts from \"./ProtectedRoutes\";\n\n\nconst Login = () => {\n  \n  const navigate = useNavigate();\n\n  // const [isLogged, setIsLogged] = useState(false);\n\n  const [login, setLogin] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  let handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n    const body = JSON.stringify({\n      username: login,\n      password: password})\n\n    const headers = new Headers({\n        \"Content-Type\": \"application/json\",\n        \"Content-Length\": JSON.stringify(body).length\n    })\n      console.log(JSON.stringify({\n        name: login,\n        password: password}))\n        let res = await fetch(\"http://localhost:8080/api/auth/login\", {\n        method: \"POST\",\n        mode: \"cors\",\n        // headers: headers,\n        body: body\n      }).then((response) => response.json());\n      // let resJson = await res.json();\n      if (res.status === 200) {\n        setLogin(\"\");\n        setPassword(\"\");\n        setMessage(\"User login successfully\");\n        // var isAuth = true;\n        // ProtectedRouts({isAuth})\n        navigate(\"/home\");\n        console.log(res.json());\n        then\n      } \n      else {\n        setMessage(\"Wrong login or password\");\n      }\n    }\n    \n    catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <div className=\"Login\">\n      <form className=\"form\" onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          value={login}\n          placeholder=\"login\"\n          onChange={(e) => setLogin(e.target.value)}\n        />\n        <input\n          type=\"text\"\n          value={password}\n          placeholder=\"password\"\n          onChange={(e) => setPassword(e.target.value)}\n        />\n\n        <button className=\"login\" type=\"submit\">Login</button>\n\n        <div className=\"message\">{message ? <p>{message}</p> : null}</div>\n      </form>\n    </div>\n  );\n}\n\nexport default Login"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}