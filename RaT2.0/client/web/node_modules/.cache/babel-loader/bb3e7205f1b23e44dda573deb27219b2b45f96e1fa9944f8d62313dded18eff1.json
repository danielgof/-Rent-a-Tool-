{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  isAuth: undefined,\n  username: undefined,\n  name: undefined,\n  surname: undefined,\n  icon: undefined\n};\nexport const userSlice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {\n    setUserData: (state, action) => {\n      state.isAuth = action.payload.isAuth;\n      state.username = action.payload.username;\n      state.name = action.payload.name;\n      state.surname = action.payload.surname;\n      state.icon = action.payload.img;\n    },\n    setUserIsAuth: (state, action) => {\n      state.isAuth = action.payload;\n    }\n  }\n});\nexport const selectUser = state => state.user;\nexport const {\n  setUserData,\n  setUserIsAuth\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","isAuth","undefined","username","name","surname","icon","userSlice","reducers","setUserData","state","action","payload","img","setUserIsAuth","selectUser","user","actions","reducer"],"sources":["/home/daniel/Documents/CS/Projects/RaT/RaT2.0/client/web/src/redux/slices/userSlice.ts"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { RootState } from \"../store\";\n\nexport interface UserState {\n    isAuth: boolean | undefined;\n    username: string | undefined;\n    name: string | undefined;\n    surname: string | undefined;\n    icon: string | undefined;\n}\n\nconst initialState: UserState = {\n    isAuth: undefined,\n    username: undefined,\n    name: undefined,\n    surname: undefined,\n    icon: undefined,\n};\n\nexport const userSlice = createSlice({\n    name: \"user\",\n    initialState,\n    reducers: {\n        setUserData: (state, action) => {\n            state.isAuth = action.payload.isAuth;\n            state.username = action.payload.username;\n            state.name = action.payload.name;\n            state.surname = action.payload.surname;\n            state.icon = action.payload.img;\n        },\n        setUserIsAuth: (state, action) => {\n            state.isAuth = action.payload;\n        },\n    },\n});\n\nexport const selectUser = (state: RootState) => state.user;\n\nexport const { setUserData, setUserIsAuth } = userSlice.actions;\n\nexport default userSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAW9C,MAAMC,YAAuB,GAAG;EAC5BC,MAAM,EAAEC,SAAS;EACjBC,QAAQ,EAAED,SAAS;EACnBE,IAAI,EAAEF,SAAS;EACfG,OAAO,EAAEH,SAAS;EAClBI,IAAI,EAAEJ;AACV,CAAC;AAED,OAAO,MAAMK,SAAS,GAAGR,WAAW,CAAC;EACjCK,IAAI,EAAE,MAAM;EACZJ,YAAY;EACZQ,QAAQ,EAAE;IACNC,WAAW,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC5BD,KAAK,CAACT,MAAM,GAAGU,MAAM,CAACC,OAAO,CAACX,MAAM;MACpCS,KAAK,CAACP,QAAQ,GAAGQ,MAAM,CAACC,OAAO,CAACT,QAAQ;MACxCO,KAAK,CAACN,IAAI,GAAGO,MAAM,CAACC,OAAO,CAACR,IAAI;MAChCM,KAAK,CAACL,OAAO,GAAGM,MAAM,CAACC,OAAO,CAACP,OAAO;MACtCK,KAAK,CAACJ,IAAI,GAAGK,MAAM,CAACC,OAAO,CAACC,GAAG;IACnC,CAAC;IACDC,aAAa,EAAE,CAACJ,KAAK,EAAEC,MAAM,KAAK;MAC9BD,KAAK,CAACT,MAAM,GAAGU,MAAM,CAACC,OAAO;IACjC;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMG,UAAU,GAAIL,KAAgB,IAAKA,KAAK,CAACM,IAAI;AAE1D,OAAO,MAAM;EAAEP,WAAW;EAAEK;AAAc,CAAC,GAAGP,SAAS,CAACU,OAAO;AAE/D,eAAeV,SAAS,CAACW,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}